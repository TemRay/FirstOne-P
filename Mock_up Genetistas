{"cells":[{"cell_type":"code","source":["#VERSIÓN DEFINITIVA DEFINITIVA 100%\n","\n","import pandas as pd\n","import numpy as np\n","\n","#DATA#\n","# Datos iniciales\n","# Cargamos los datos de disponibilidad, especialización, bloqueos y otras restricciones.\n","\n","# VARIABLES Y PARÁMETROS\n","\n","disponibilidad_mes_analista = None\n","disponibilidad_mes_revisor = None\n","\n","\n","contador_analista = 0\n","contador_revisor = 0\n","\n","\n","meses = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre']\n","\n","Analistas = ['Albus Dumbledore','Fred Weasley','George Weasley','Harry Potter','Hermione Granger','Luna Lovegood','Minerva McGonagall',\n","               'Remus Lupin','Rubeus Hagrid','Severus Snape','Argus Filch', 'Arthur Weasley', 'Cho Chang','Dolores Umbridge', 'Fleur Delacour',\n","               'Ginny Weasley', 'Horace Slughorn',\n","                'Molly Weasley','Sirius Black', 'Viktor Krum', 'Voldemort', 'Bellatrix lestrange','Cedric Diggory', 'Cornelius Fudge',\n","                'Draco Malfoy','Gilderoy Lockhart', 'Kingsley Shacklebolt',\n","               'Lucius Malfoy', 'Narcissa Malfoy','Neville Longbotton', 'Nymphadora Tonks','Peter Pettigrew','Ron Weasley']\n","\n","Revisores =  ['Albus Dumbledore','Fred Weasley','George Weasley','Harry Potter','Hermione Granger','Luna Lovegood','Minerva McGonagall',\n","                'Remus Lupin','Rubeus Hagrid','Severus Snape','Bellatrix lestrange','Cedric Diggory', 'Cornelius Fudge',\n","                'Draco Malfoy','Gilderoy Lockhart', 'Kingsley Shacklebolt',\n","               'Lucius Malfoy', 'Narcissa Malfoy','Neville Longbotton', 'Nymphadora Tonks','Peter Pettigrew',\n","                'Ron Weasley', 'Argus Filch', 'Arthur Weasley', 'Cho Chang','Dolores Umbridge', 'Fleur Delacour', 'Ginny Weasley', 'Horace Slughorn',\n","                'Molly Weasley','Sirius Black', 'Viktor Krum', 'Voldemort']\n","\n","Tecnicas_analistas = [(7, 8, 19), (14, 21), (14,), (13, 14, 21), (7, 13, 14, 21), (13, 14, 16, 21), (9, 25), (13, 14, 21), (7, 8), (9, 25),\n","                      (8,), (9, 25), (7, 8), (7,), (8,), (7, 19), (7,), (7, 8, 19, 30), (7, 8), (19,), (7,), (7, 8, 19), (7, 8, 30), (19,),\n","                      (8, 13, 14, 21), (7, 8), (7,), (8,), (21, 25), (14,), (7, 8), (7, 14), (7,), (7, 8, 19)]\n","\n","\n","\n","Tecnicas_revisores = [(7, 19), (13, 21), (13, 14), (13, 14, 21), (13, 14, 21), (14,), (9,),\n","                      (14, 21), (13,), (9, 25), (7, 8, 19), (7, 8, 30), (19,), (8, 13, 14, 21),\n","                      (7, 8), (7,), (8,), (21, 25), (14,), (7, 8), (7, 14), (7,), (7, 8, 19), (8,),\n","                      (9, 25), (7, 8), (8, 13, 14, 21), (7,), (8,), (7, 19), (7,), (7, 8, 19, 30),\n","                      (7, 8), (19,), (7,)]\n","\n","\n","disponibilidad_analistas_data = {\n","    'Nombre': ['Albus Dumbledore','Fred Weasley','George Weasley','Harry Potter','Hermione Granger','Luna Lovegood','Minerva McGonagall','Remus Lupin','Rubeus Hagrid','Severus Snape','Argus Filch',\n","               'Arthur Weasley', 'Cho Chang','Dolores Umbridge', 'Fleur Delacour', 'Ginny Weasley', 'Horace Slughorn',\n","                'Molly Weasley','Sirius Black', 'Viktor Krum', 'Voldemort', 'Bellatrix lestrange','Cedric Diggory', 'Cornelius Fudge', 'Draco Malfoy','Gilderoy Lockhart', 'Kingsley Shacklebolt',\n","               'Lucius Malfoy', 'Narcissa Malfoy','Neville Longbotton', 'Nymphadora Tonks','Peter Pettigrew','Ron Weasley'],\n","\n","\n","    'Enero': [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n","    'Febrero': [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n","    'Marzo': [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1],\n","    'Abril':[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1],\n","    'Mayo':  [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n","    'Junio': [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1],\n","    'Julio': [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n","    'Agosto': [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1],\n","    'Septiembre':[1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1],\n","    'Octubre':[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1],\n","    'Noviembre':[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0],\n","    'Diciembre': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1],\n","}\n","\n","disponibilidad_revisores_data = {\n","    'Nombre': ['Albus Dumbledore','Fred Weasley','George Weasley','Harry Potter','Hermione Granger','Luna Lovegood','Minerva McGonagall',\n","               'Remus Lupin','Rubeus Hagrid','Severus Snape','Bellatrix lestrange','Cedric Diggory', 'Cornelius Fudge', 'Draco Malfoy',\n","               'Gilderoy Lockhart', 'Kingsley Shacklebolt','Lucius Malfoy', 'Narcissa Malfoy','Neville Longbotton', 'Nymphadora Tonks',\n","               'Peter Pettigrew','Ron Weasley',  'Argus Filch', 'Arthur Weasley', 'Cho Chang','Dolores Umbridge', 'Fleur Delacour', 'Ginny Weasley', 'Horace Slughorn',\n","                'Molly Weasley','Sirius Black', 'Viktor Krum', 'Voldemort'],\n","    'Enero': [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1],\n","    'Febrero': [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1],\n","    'Marzo': [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n","    'Abril':[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1],\n","    'Mayo': [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1],\n","    'Junio': [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n","    'Julio': [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1],\n","    'Agosto': [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n","    'Septiembre':[1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n","    'Octubre':[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],\n","    'Noviembre': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1],\n","    'Diciembre': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1],\n","}\n","\n","\n","departamentos_areas = {\n","    'Bioinformatics': ['Atherosclerosis', 'Cardiology', 'Medical Genetics', 'Nephrology', 'Neurology', 'Oncology', 'Unassigned'],\n","    'Genetic Diagnosis': ['Atherosclerosis', 'Cardiology', 'Medical Genetics', 'Nephrology', 'Neurology', 'Oncology', 'Pharmacogenetics', 'Unassigned'],\n","    'Laboratory': ['Cardiology', 'Medical Genetics', 'Nephrology', 'Neurology', 'Oncology', 'Pharmacogenetics', 'Unassigned']\n","}\n","\n","\n","\n","\n","\n","#FUNCIONES\n","\n","def verificar_disponibilidad_analista(disponibilidad_analistas_data, analista, mes):\n","\n","    global disponibilidad_mes_analista\n","\n","    # Verifica si el analista está en la lista de analistas\n","    if analista not in disponibilidad_analistas_data['Nombre']:\n","        print(\"El analista ingresado no se encuentra en la lista.\")\n","        return\n","\n","\n","    # Verifica si el mes ingresado está en la lista de meses\n","    if mes not in meses:\n","        print(\"Mes inválido. Debe ser uno de los siguientes: Enero, Febrero, Marzo, Abril, Mayo, Junio, Julio, Agosto, Septiembre, Octubre, Noviembre, Diciembre.\")\n","        return\n","\n","    # Obtiene el índice del analista y verifica la disponibilidad en el mes especificado\n","    indice_analista = disponibilidad_analistas_data['Nombre'].index(analista)\n","    disponibilidad_mes_analista = disponibilidad_analistas_data[mes][indice_analista]\n","    if disponibilidad_mes_analista == 1:\n","      disponibilidad_analistas_data[mes][indice_analista] = 0 #Ponemos ese dia del mes a 0 ya que acaban de reservar la cita\n","\n","\n","\n","\n","def verificar_disponibilidad_revisor(disponibilidad_revisores_data, revisor, mes):\n","\n","    global disponibilidad_mes_revisor\n","\n","    # Verifica si el analista está en la lista de analistas\n","    if revisor not in disponibilidad_revisores_data['Nombre']:\n","        print(\"El analista ingresado no se encuentra en la lista.\")\n","        return\n","\n","\n","    # Verifica si el mes ingresado está en la lista de meses\n","    if mes not in meses:\n","        print(\"Mes inválido. Debe ser uno de los siguientes: Enero, Febrero, Marzo, Abril, Mayo, Junio, Julio, Agosto, Septiembre, Octubre, Noviembre, Diciembre.\")\n","        return\n","\n","    # Obtiene el índice del analista y verifica la disponibilidad en el mes especificado\n","    indice_revisor = disponibilidad_revisores_data['Nombre'].index(revisor)\n","    disponibilidad_mes_revisor = disponibilidad_revisores_data[mes][indice_revisor]\n","    if disponibilidad_mes_revisor == 1:\n","      disponibilidad_revisores_data[mes][indice_revisor] = 0    #Ponemos ese dia del mes a 0 ya que acaban de reservar la cita\n","\n","def verificar_disponibilidad_total(disponibilidad_mes_analista, disponibilidad_mes_revisor, revisor, analista, mes):\n","\n","      if disponibilidad_mes_analista and disponibilidad_mes_revisor == 1:\n","        print(f\"El revisor {revisor} y el analista {analista} está disponible en el mes especificado ({mes}). Cita creada con éxito\")\n","      else:\n","         print(f\"La combinación del revisor {revisor} y del analista {analista} no está disponible en el mes especificado ({mes}). Seguimos buscando para darte una combinación, espere por favor....\")\n","\n","\n","\n","\n","def verificar_area(departamento, area):\n","    if area not in departamentos_areas.get(departamento, []):\n","        print(\"Combinación imposible, vuelve a introducir el dato. Asegurate que has escrito el término respetando mayusculas y minúsculas\")\n","        return False\n","    else:\n","        print(\"Combinación acertada\")\n","        return True\n","\n","\n","\n","def asignar_analista(tecnica):\n","\n","  global analista\n","\n","  Analistas = ['Albus Dumbledore','Fred Weasley','George Weasley','Harry Potter','Hermione Granger','Luna Lovegood','Minerva McGonagall',\n","               'Remus Lupin','Rubeus Hagrid','Severus Snape','Argus Filch', 'Arthur Weasley', 'Cho Chang','Dolores Umbridge', 'Fleur Delacour',\n","               'Ginny Weasley', 'Horace Slughorn',\n","                'Molly Weasley','Sirius Black', 'Viktor Krum', 'Voldemort', 'Bellatrix lestrange','Cedric Diggory', 'Cornelius Fudge',\n","                'Draco Malfoy','Gilderoy Lockhart', 'Kingsley Shacklebolt',\n","               'Lucius Malfoy', 'Narcissa Malfoy','Neville Longbotton', 'Nymphadora Tonks','Peter Pettigrew','Ron Weasley']\n","\n","  Tecnicas_analistas = [(7, 8, 19), (14, 21), (14,), (13, 14, 21), (7, 13, 14, 21), (13, 14, 16, 21), (9, 25), (13, 14, 21), (7, 8), (9, 25),\n","                      (8,), (9, 25), (7, 8), (7,), (8,), (7, 19), (7,), (7, 8, 19, 30), (7, 8), (19,), (7,), (7, 8, 19), (7, 8, 30), (19,),\n","                      (8, 13, 14, 21), (7, 8), (7,), (8,), (21, 25), (14,), (7, 8), (7, 14), (7,), (7, 8, 19)]\n","\n","\n","\n","  for contador_analista, conjunto in enumerate(Tecnicas_analistas):\n","    if tecnica in conjunto:\n","        analista = Analistas[contador_analista]\n","        return analista\n","\n","\n","\n","    print(\"El analista asignado es: \", analista)\n","  else:\n","    print(f\"La técnica {tecnica} no se encuentra en la tabla.\")\n","\n","\n","\n","\n","\n","def asignar_revisor(tecnica, analista):\n","\n","  global revisor\n","\n","  Revisores =  ['Albus Dumbledore','Fred Weasley'\n","  ,'George Weasley','Harry Potter','Hermione Granger','Luna Lovegood','Minerva McGonagall',\n","                'Remus Lupin','Rubeus Hagrid','Severus Snape','Bellatrix lestrange','Cedric Diggory', 'Cornelius Fudge',\n","                'Draco Malfoy','Gilderoy Lockhart', 'Kingsley Shacklebolt',\n","               'Lucius Malfoy', 'Narcissa Malfoy','Neville Longbotton', 'Nymphadora Tonks','Peter Pettigrew',\n","                'Ron Weasley', 'Argus Filch', 'Arthur Weasley', 'Cho Chang','Dolores Umbridge', 'Fleur Delacour', 'Ginny Weasley', 'Horace Slughorn',\n","                'Molly Weasley','Sirius Black', 'Viktor Krum', 'Voldemort']\n","\n","  Tecnicas_revisores = [(7, 19), (13, 21), (13, 14), (13, 14, 21), (13, 14, 21), (14,), (9,),\n","                      (14, 21), (13,), (9, 25), (7, 8, 19), (7, 8, 30), (19,), (8, 13, 14, 21),\n","                      (7, 8), (7,), (8,), (21, 25), (14,), (7, 8), (7, 14), (7,), (7, 8, 19), (8,),\n","                      (9, 25), (7, 8), (8, 13, 14, 21), (7,), (8,), (7, 19), (7,), (7, 8, 19, 30),\n","                      (7, 8), (19,), (7,)]\n","\n","\n","\n","\n","  for contador_revisor, conjunto in enumerate(Tecnicas_revisores):\n","    if tecnica in conjunto:\n","      # Si el revisor es diferente del analista actual, asignarlo y salir\n","       if Revisores[contador_revisor] != analista:\n","                revisor = Revisores[contador_revisor]\n","                return revisor\n","\n","\n","\n","\n","\n","\n","# Mensaje de bienvenida\n","# PREGUNTAS USUARIO\n","# Bucle para múltiples casos\n","while True:\n","  for i in range(1, 10):\n","\n","      caso = f\"Caso {i}\"\n","      print(f\"\\n{caso}:\")\n","      print(\"Bienvenido a la plataforma de gestión de cita previa, para proceder, por favor responda a las siguientes preguntas :\")\n","\n","      nombre = input(\"¿Cómo te llamas? \")\n","      print(\"Muy bien, muchas gracias por presentarte\", nombre)\n","\n","      print(\"Cuéntame un poco más sobre ti\")\n","      edad = input(\"¿Qué edad tienes?\")\n","\n","\n","\n","      print(\"Ahora te haré unas preguntas más específicas sobre tu caso\")\n","\n","      print(\"En estos momentos contamos con los siguientes departamentos: Genetic Diagnosis, Bioinformatics, Laboratory \")\n","      departamento = input(\"¿A qué departamento crees que correspondes?\")\n","\n","      print(\"Muy bien! En estos momentos contamos con las siguientes áreas: Atherosclerosis, Cardiology, Medical Genetics, Nephrology, Neurology, Oncology, Pharmacogenetics \")\n","      area = input(\"¿En qué área prefieres?\")\n","\n","      if not verificar_area(departamento, area):\n","        break\n","      else:\n","        print(\"Muy bien! En estos momentos contamos con una gran diversidad de técnicas desde Técnica 1 hasta Técnica 31 \")\n","        tecnica = int(input(\"¿Qué técnica necesitas?\"))\n","\n","        asignar_analista(tecnica)\n","        asignar_revisor(tecnica, analista)\n","\n","        while analista == revisor:\n","          print(f\"El analista y revisor son la misma persona: {analista}. Buscando otra combinación...\")\n","          asignar_revisor(tecnica, analista)\n","\n","        print(f\"Analista asignado: {analista}, Revisor asignado: {revisor}\")\n","\n","        print(\"Perfecto, ya sólo nos queda una última pregunta:\")\n","        mes = input(\"¿En qué mes prefieres la cita?\")\n","\n","        verificar_disponibilidad_analista(disponibilidad_analistas_data, analista, mes)\n","        verificar_disponibilidad_revisor(disponibilidad_revisores_data, revisor, mes)\n","        verificar_disponibilidad_total( disponibilidad_mes_analista, disponibilidad_mes_revisor, revisor, analista, mes)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":738},"id":"TXtRxvFZ6c7c","executionInfo":{"status":"error","timestamp":1729612107439,"user_tz":-120,"elapsed":24376,"user":{"displayName":"Ramón Templado Castellar","userId":"01567704173158726103"}},"outputId":"62b58440-2db2-48d0-ff46-f0f5d1952240"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Caso 1:\n","Bienvenido a la plataforma de gestión de cita previa, para proceder, por favor responda a las siguientes preguntas :\n","¿Cómo te llamas? Ramon\n","Muy bien, muchas gracias por presentarte Ramon\n","Cuéntame un poco más sobre ti\n","¿Qué edad tienes?23\n","Ahora te haré unas preguntas más específicas sobre tu caso\n","En estos momentos contamos con los siguientes departamentos: Genetic Diagnosis, Bioinformatics, Laboratory \n","¿A qué departamento crees que correspondes?Laboratory\n","Muy bien! En estos momentos contamos con las siguientes áreas: Atherosclerosis, Cardiology, Medical Genetics, Nephrology, Neurology, Oncology, Pharmacogenetics \n","¿En qué área prefieres?Oncology\n","Combinación acertada\n","Muy bien! En estos momentos contamos con una gran diversidad de técnicas desde Técnica 1 hasta Técnica 31 \n","¿Qué técnica necesitas?7\n","Analista asignado: Albus Dumbledore, Revisor asignado: Bellatrix lestrange\n","Perfecto, ya sólo nos queda una última pregunta:\n","¿En qué mes prefieres la cita?Enero\n","El revisor Bellatrix lestrange y el analista Albus Dumbledore está disponible en el mes especificado (Enero). Cita creada con éxito\n","\n","Caso 2:\n","Bienvenido a la plataforma de gestión de cita previa, para proceder, por favor responda a las siguientes preguntas :\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"Interrupted by user","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-7-b6abbea5a2a9>\u001b[0m in \u001b[0;36m<cell line: 236>\u001b[0;34m()\u001b[0m\n\u001b[1;32m    241\u001b[0m       \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Bienvenido a la plataforma de gestión de cita previa, para proceder, por favor responda a las siguientes preguntas :\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    242\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 243\u001b[0;31m       \u001b[0mnombre\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"¿Cómo te llamas? \"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    244\u001b[0m       \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Muy bien, muchas gracias por presentarte\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnombre\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    245\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m    849\u001b[0m                 \u001b[0;34m\"raw_input was called, but this frontend does not support input requests.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    850\u001b[0m             )\n\u001b[0;32m--> 851\u001b[0;31m         return self._input_request(str(prompt),\n\u001b[0m\u001b[1;32m    852\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    853\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    893\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    894\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 895\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Interrupted by user\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    896\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    897\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarning\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Invalid Message:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexc_info\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"]}]}],"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyN3XLmZkQ+13OoDQn9aRIrI"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}
